// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package zet_model

import (
	"time"
)

const TableNameRss = "rss"

// Rss mapped from table <rss>
type Rss struct {
	ID          uint64     `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id"`
	Mark        string     `gorm:"column:mark;type:varchar(30);not null;comment:标识" json:"mark"`
	Title       string     `gorm:"column:title;type:varchar(256);not null;comment:标题" json:"title"`
	Link        string     `gorm:"column:link;type:varchar(1024);not null;comment:链接" json:"link"`
	Author      string     `gorm:"column:author;type:varchar(64);not null;comment:作者" json:"author"`
	PubDate     *time.Time `gorm:"column:pub_date;type:datetime;comment:发布时间" json:"pub_date"`
	Desctiption *string    `gorm:"column:desctiption;type:text;comment:描述" json:"desctiption"`
	Bittorrent  *string    `gorm:"column:bittorrent;type:text;comment:种子路径" json:"bittorrent"`
	GUID        string     `gorm:"column:guid;type:varchar(256);not null;comment:资源标识" json:"guid"`
	Uk          string     `gorm:"column:uk;type:varchar(64);not null;comment:资源标识，业务定义" json:"uk"`
	CreatedAt   *time.Time `gorm:"column:created_at;type:datetime;not null;default:CURRENT_TIMESTAMP;comment:插入时间" json:"created_at"`
	UpdatedAt   *time.Time `gorm:"column:updated_at;type:datetime;not null;default:CURRENT_TIMESTAMP;comment:更新时间" json:"updated_at"`
}

// TableName Rss's table name
func (*Rss) TableName() string {
	return TableNameRss
}
